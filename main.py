import json
import os
import asyncio
import gspread
from datetime import datetime, timedelta
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from oauth2client.service_account import ServiceAccountCredentials
from pyrogram import Client, filters, idle
from pyrogram.types import Message

print("[DEBUG] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞...")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open("config.json", "r") as config_file:
    config = json.load(config_file)
    print("[DEBUG] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

API_ID = config["API_ID"]
API_HASH = config["API_HASH"]
BOT_TOKEN = config["BOT_TOKEN"]
GOOGLE_SHEET_NAME = config["GOOGLE_SHEET_NAME"]
FORM_URL = config["FORM_URL"]
TRIBUTE_LINK = config["TRIBUTE_LINK"]

print(f"[DEBUG] API_ID: {API_ID}")
print(f"[DEBUG] BOT_TOKEN: {BOT_TOKEN[:10]}...")

# Telegram client
app = Client("entourage_bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)
scheduler = AsyncIOScheduler()

print("[DEBUG] –ö–ª–∏–µ–Ω—Ç Telegram –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
try:
    scope = ["https://spreadsheets.google.com/feeds",'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    gs_client = gspread.authorize(creds)
    sheet = gs_client.open(GOOGLE_SHEET_NAME).sheet1
    print("[DEBUG] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Google Sheets: {str(e)}")

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
user_timers = {}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–∫–µ—Ç—ã –∏ —Å—Ç–∞—Ç—É—Å–∞ ---
def check_form_submission(username):
    try:
        print(f"[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã –¥–ª—è @{username}")
        records = sheet.get_all_records()
        print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ {len(records)} –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã")
        for record in records:
            tg = record.get("–ö–∞–∫ —Å —Ç–æ–±–æ–π –ª—É—á—à–µ —Å–≤—è–∑–∞—Ç—å—Å—è?", "").strip().replace("@", "")
            print(f"[DEBUG] –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º {tg.lower()} —Å {username.lower()}")
            if tg.lower() == username.lower():
                print(f"[DEBUG] –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è @{username}")
                return True
        print(f"[DEBUG] –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è @{username}")
        return False
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã: {str(e)}")
        return False

def check_form_approved(username):
    try:
        print(f"[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –¥–ª—è @{username}")
        records = sheet.get_all_records()
        print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ {len(records)} –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã")
        for record in records:
            tg = record.get("–ö–∞–∫ —Å —Ç–æ–±–æ–π –ª—É—á—à–µ —Å–≤—è–∑–∞—Ç—å—Å—è?", "").strip().replace("@", "")
            status = record.get("–°—Ç–∞—Ç—É—Å", "").lower()
            print(f"[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏: tg={tg}, status={status}")
            if tg.lower() == username.lower() and "–æ–¥–æ–±—Ä" in status:
                print(f"[DEBUG] –ù–∞–π–¥–µ–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –¥–ª—è @{username}")
                return True
        print(f"[DEBUG] –û–¥–æ–±—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è @{username}")
        return False
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã: {str(e)}")
        return False

# --- –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∞–≤—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏—è ---
async def send_reminder(client, chat_id, level):
    if level == 1:
        text = f"""üíå –ú–∏–ª–∞—è, —Ç—ã –µ—â—ë –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∞ –∞–Ω–∫–µ—Ç—É Entourage Girls.

–≠—Ç–æ –∑–∞–π–º—ë—Ç 3 –º–∏–Ω—É—Ç—ã: {FORM_URL}
"""
    elif level == 2:
        text = f"""‚ú® –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –∞–Ω–∫–µ—Ç–∞ –≤—Å—ë –µ—â—ë –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è —Ç–µ–±—è.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤ –∫–ª—É–± Entourage ‚Äî –∑–∞–ø–æ–ª–Ω–∏ —Å–µ–π—á–∞—Å: {FORM_URL}
"""
    await client.send_message(chat_id, text)
    print(f"[Reminder {level}] -> {chat_id}")

async def send_invite(client, chat_id):
    text = f"""üíñ –ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–∞—è!

–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ç–µ–±—è –≤ –∑–∞–∫—Ä—ã—Ç–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏ Entourage Girls. –¢—ã –ø—Ä–æ—à–ª–∞ –æ—Ç–±–æ—Ä, –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è: {TRIBUTE_LINK}

üíå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ 24 —á–∞—Å–∞.
"""
    await client.send_message(chat_id, text)
    print(f"[Invite Sent] -> {chat_id}")

    scheduler.add_job(lambda: asyncio.create_task(
        client.send_message(chat_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–µ–º: —Ç–≤–æ—ë –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ Entourage –≤—Å—ë –µ—â—ë –∞–∫—Ç–∏–≤–Ω–æ. {TRIBUTE_LINK}")
    ), 'date', run_date=datetime.now() + timedelta(hours=24))

    scheduler.add_job(lambda: asyncio.create_task(
        client.send_message(chat_id, f"‚ùóÔ∏è–≠—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç. –£—Å–ø–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è: {TRIBUTE_LINK}")
    ), 'date', run_date=datetime.now() + timedelta(hours=48))

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
@app.on_message(filters.command("start") | filters.text)
async def handle_message(client, message: Message):
    try:
        username = message.from_user.username
        chat_id = message.chat.id
        print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username}: {message.text}")
        print(f"[DEBUG] Chat ID: {chat_id}")

        if not username:
            print("[DEBUG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username")
            await message.reply("üôà –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å username –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π.")
            return

        print(f"[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∫–µ—Ç—ã –¥–ª—è @{username}")
        if check_form_approved(username):
            print(f"[DEBUG] –ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è @{username}")
            await send_invite(client, chat_id)
            return

        if check_form_submission(username):
            print(f"[DEBUG] –ê–Ω–∫–µ—Ç–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è @{username}")
            await message.reply("üíå –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É. –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –∫—É—Ä–∞—Ç–æ—Ä Entourage Girls.")
            print(f"[–ê–Ω–∫–µ—Ç–∞ —É–∂–µ –µ—Å—Ç—å] @{username}")
        else:
            print(f"[DEBUG] –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –¥–ª—è @{username}")
            welcome_text = f"""–ü—Ä–∏–≤–µ—Ç, –º–∏–ª–∞—è! ‚ú®

–¢—ã –≤ —à–∞–≥–µ –æ—Ç –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Entourage Girls ‚Äî –º–µ—Å—Ç–∞ —Å–∏–ª—ã, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –∂–µ–Ω—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏. üí´

–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∫–ª—É–±, –Ω–∞—á–Ω–∏ —Å –∞–Ω–∫–µ—Ç—ã ‚Äî —ç—Ç–æ –∑–∞–π–º—ë—Ç 3 –º–∏–Ω—É—Ç—ã:
{FORM_URL}

–° –ª—é–±–æ–≤—å—é, –∫–æ–º–∞–Ω–¥–∞ Entourage üíñ
"""
            await message.reply(welcome_text)
            print(f"[–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ] @{username}")

            scheduler.add_job(send_reminder, 'date', run_date=datetime.now() + timedelta(hours=12), args=[client, chat_id, 1])
            scheduler.add_job(send_reminder, 'date', run_date=datetime.now() + timedelta(hours=24), args=[client, chat_id, 2])
            print(f"[–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã] @{username}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
        try:
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        except:
            print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    try:
        print("[DEBUG] –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        scheduler.start()
        print("[DEBUG] –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ Telegram...")
        await app.start()
        print("ü§ñ EntourageBot –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
        await idle()
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {str(e)}")
    finally:
        await app.stop()

if __name__ == "__main__":
    asyncio.run(main())