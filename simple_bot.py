import json
import logging
import asyncio
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackContext, CallbackQueryHandler
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import aiohttp
import hmac
import hashlib
import base64
import time
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

BOT_TOKEN = config['BOT_TOKEN']
FORM_URL = config['FORM_URL']
TRIBUTE_LINK = config['TRIBUTE_LINK']
GOOGLE_SHEET_NAME = config['GOOGLE_SHEET_NAME']
LAVA_API_KEY = config['LAVA_API_KEY']
LAVA_SHOP_ID = config['LAVA_SHOP_ID']
LAVA_SECRET_KEY = config['LAVA_SECRET_KEY']

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name('entourage-girls-club-4f9c9c9c9c9c.json', scope)
client = gspread.authorize(creds)
sheet = client.open(GOOGLE_SHEET_NAME).sheet1

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
user_reminders = {}

def check_form_submission(username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
    try:
        records = sheet.get_all_records()
        for record in records:
            tg = record.get("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π telegram –¥–ª—è —Å–≤—è–∑–∏", "").strip().replace("@", "")
            if tg.lower() == username.lower():
                return True
        return False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–Ω–∫–µ—Ç—ã: {e}")
        return False

def check_form_approved(username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
    try:
        records = sheet.get_all_records()
        for record in records:
            tg = record.get("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π telegram –¥–ª—è —Å–≤—è–∑–∏", "").strip().replace("@", "")
            status = record.get("–°—Ç–∞—Ç—É—Å", "").lower()
            if tg.lower() == username.lower():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
                if "–æ–ø–ª–∞—Ç" in status:  # –ï—Å–ª–∏ —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª–∞
                    return False
                return True  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä—è–µ–º –µ—Å–ª–∏ –∞–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞
        return False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è: {e}")
        return False

async def send_reminder(context: ContextTypes.DEFAULT_TYPE, chat_id: int, level: int):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    if level == 1:
        text = f"""–ú–∏–ª–∞—è, —Ö–æ—Ç–∏–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å: –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ Entourage Girls –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ—Ä–æ—Ç–∫–æ–π –∞–Ω–∫–µ—Ç—ã. –≠—Ç–æ –∑–∞–π–º—ë—Ç 3 –º–∏–Ω—É—Ç—ã, –∏ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –∏ –ø–æ–Ω—è—Ç—å, –ø–æ–¥–æ–π–¥—ë—Ç –ª–∏ —Ç–µ–±–µ –∫–ª—É–±.

–í–æ—Ç —Ñ–æ—Ä–º–∞: {FORM_URL}

–° –ª—é–±–æ–≤—å—é, –∫–æ–º–∞–Ω–¥–∞ Entourage Girls üíñ"""
    else:
        text = f"""–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ö–æ—Ç–∏–º —É—Ç–æ—á–Ω–∏—Ç—å ‚Äî —Ç—ã –≤—Å—ë –µ—â—ë —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –Ω–∞—à –∫–ª—É–±? –ú—ã –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É.

Entourage Girls ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∞—Ç –∏ –≤—Å—Ç—Ä–µ—á–∏. –≠—Ç–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏ –∏ –∂–µ–Ω—â–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç –∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —á–∞—Å—Ç—å—é —Ç–≤–æ–µ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å ‚Äî –∞–Ω–∫–µ—Ç–∞ –≤—Å—ë –µ—â—ë –æ—Ç–∫—Ä—ã—Ç–∞: {FORM_URL}

–ê –µ—Å–ª–∏ —Ç–µ–±–µ –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è –¥—Ä—É–≥–æ–π –ø—É—Ç—å ‚Äî —ç—Ç–æ —Ç–æ–∂–µ –æ–∫. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª —Ç–≤–æ–∏–º üí´"""
    
    await context.bot.send_message(chat_id=chat_id, text=text)

async def create_payment(user_id: int, username: str) -> str:
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ Lava Top"""
    url = "https://api.lava.top/payment/create"
    
    payload = {
        "shop_id": LAVA_SHOP_ID,
        "amount": "1000.00",  # –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö
        "currency": "RUB",
        "order_id": f"order_{user_id}_{int(time.time())}",
        "hook_url": "https://345c-116-105-161-246.ngrok-free.app/webhook",  # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        "success_url": "https://t.me/EntourageGirlsClub_bot",  # URL –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        "fail_url": "https://t.me/EntourageGirlsClub_bot",  # URL –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        "expire": 3600,  # –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –ø–ª–∞—Ç–µ–∂–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        "custom_fields": {
            "user_id": str(user_id),
            "username": username
        }
    }
    
    headers = {
        "Authorization": f"Bearer {LAVA_API_KEY}",
        "Content-Type": "application/json"
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=payload, headers=headers) as response:
            if response.status == 200:
                data = await response.json()
                return data.get('payment_url')
            else:
                logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {await response.text()}")
                return None

async def check_payment_status(order_id: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞"""
    url = f"https://api.lava.top/payment/status/{order_id}"
    
    headers = {
        "Authorization": f"Bearer {LAVA_API_KEY}",
        "Content-Type": "application/json"
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as response:
            if response.status == 200:
                data = await response.json()
                return data.get('status') == 'success'
            return False

async def send_invite(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
    user_id = update.effective_user.id
    username = update.effective_user.username or str(user_id)
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
    payment_url = await create_payment(user_id, username)
    if not payment_url:
        await update.message.reply_text(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É
    await update.message.reply_text(
        f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! üéâ\n\n"
        f"–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª—É–± –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É. "
        f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –∏ –≤—Å–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º.\n\n"
        f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {payment_url}\n\n"
        f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º."
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤
    context.job_queue.run_once(
        send_reminder,
        timedelta(hours=12),
        data={'user_id': user_id, 'username': username, 'payment_url': payment_url}
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await handle_message(update, context)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    chat_id = update.effective_chat.id
    username = user.username

    if not username:
        await update.message.reply_text(
            "üôà –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å username –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π."
        )
        return

    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}")

    if check_form_approved(username):
        await send_invite(update, context)
        return

    if check_form_submission(username):
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É! –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Ç—ã –ø–æ–ª—É—á–∏—à—å –æ—Ç–≤–µ—Ç: –ø—Ä–∏–≥–ª–∞—Å–∏–º —Ç–µ–±—è –∏–ª–∏, –µ—Å–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–ª–∏ ‚Äî –±–µ—Ä–µ–∂–Ω–æ —Å–æ–æ–±—â–∏–º –æ–± —ç—Ç–æ–º.\n\n"
            "–ü–æ–∫–∞ —Ç—ã –∂–¥—ë—à—å, –º–æ–∂–µ—à—å –∑–∞–≥–ª—è–Ω—É—Ç—å –∫ –Ω–∞–º –≤ Instagram @entourage.girls ‚Äî —Ç–∞–º –º–Ω–æ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –º–æ–º–µ–Ω—Ç–æ–≤ –∏–∑ –∂–∏–∑–Ω–∏ –∫–ª—É–±–∞."
        )
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π FAQ
    keyboard = [
        [InlineKeyboardButton("‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = f"""–ü—Ä–∏–≤–µ—Ç, –º–∏–ª–∞—è! ‚ú®

–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ Entourage Girls ‚Äî –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–ª—É–±—É –¥–µ–≤—É—à–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –±–æ–ª—å—à–µ–≥–æ –æ—Ç –∂–∏–∑–Ω–∏.

–ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —É–∂–µ –æ–±—ä–µ–¥–∏–Ω–∏–ª–æ 1500 —É—á–∞—Å—Ç–Ω–∏—Ü: –æ—Ç –±–ª–æ–≥–µ—Ä–æ–≤ –¥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–∫ —Ç–æ–ø-–≤—É–∑–æ–≤, –æ—Ç –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü –±—Ä–µ–Ω–¥–æ–≤ –¥–æ –¥–µ–≤—É—à–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏, —á—Ç–æ –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤–æ–º—É.

–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ä—É–≥ ‚Äî –∑–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å —Å–≤–æ—ë –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—à—å—Å—è, –≤–ª—é–±–ª—è–µ—à—å—Å—è –≤ –∂–∏–∑–Ω—å –∏ –Ω–∏–∫–æ–≥–¥–∞ –±–æ–ª—å—à–µ –Ω–µ —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –æ–¥–Ω–æ–π.

–í–Ω—É—Ç—Ä–∏ –∫–ª—É–±–∞ ‚Äî –∑–≤–∞–Ω—ã–µ —É–∂–∏–Ω—ã, –¥–µ–≤–∏—á—å–∏ –∑–∞–≤—Ç—Ä–∞–∫–∏, –∫–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏, –¥–Ω–∏ –∫—Ä–∞—Å–æ—Ç—ã —Å –±—Ä–µ–Ω–¥–∞–º–∏ –∏ –¥–∞–∂–µ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–µ–¥–µ–ª—è—Ö –º–æ–¥—ã. –ù–æ –≥–ª–∞–≤–Ω–æ–µ ‚Äî —ç—Ç–æ —Å–≤—è–∑—å –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏—Ü–∞–º–∏ –∏ —á—É–≤—Å—Ç–≤–æ, —á—Ç–æ —Ç—ã –≤ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ.

–ö–ª—É–± —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥–æ–≤–æ–≥–æ —á–ª–µ–Ω—Å—Ç–≤–∞, —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–µ—Å—Ç. –ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ —Ç–æ–ª—å–∫–æ –ø–æ –∞–Ω–∫–µ—Ç–∞–º ‚Äî —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ —É—Ä–æ–≤–µ–Ω—å.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ª–∏—á–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚Äî –∑–∞–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ–æ—Ä–º—É, –æ–Ω–∞ –∑–∞–π–º—ë—Ç 3 –º–∏–Ω—É—Ç—ã:
{FORM_URL}

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∑–∞—è–≤–∫—É –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫.

–° –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥—ë–º —Ç–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é,
Entourage Girls üíñ"""

    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - –º–∏–Ω—É—Ç—ã –≤–º–µ—Å—Ç–æ —á–∞—Å–æ–≤)
    context.job_queue.run_once(
        lambda ctx: send_reminder(ctx, chat_id, 1),
        timedelta(minutes=1)  # –ë—ã–ª–æ hours=12
    )
    context.job_queue.run_once(
        lambda ctx: send_reminder(ctx, chat_id, 2),
        timedelta(minutes=2)  # –ë—ã–ª–æ hours=24
    )

async def handle_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É FAQ"""
    query = update.callback_query
    await query.answer()

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("üí∞ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ?", callback_data="faq_1")],
        [InlineKeyboardButton("üíé –ú–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –∞–Ω–∫–µ—Ç—ã?", callback_data="faq_2")],
        [InlineKeyboardButton("üéÅ –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —á–ª–µ–Ω—Å—Ç–≤–æ?", callback_data="faq_3")],
        [InlineKeyboardButton("üí¨ –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —á–∞—Ç", callback_data="faq_4")],
        [InlineKeyboardButton("üéâ –ö–∞–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è?", callback_data="faq_5")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=reply_markup
    )

async def handle_faq_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ FAQ"""
    query = update.callback_query
    await query.answer()

    faq_answers = {
        "faq_1": f"""1. –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª—É–±?

–£ –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –≥–æ–¥–æ–≤–æ–µ —á–ª–µ–Ω—Å—Ç–≤–æ, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Å—Ç–∞—ë—Ç—Å—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π ‚Äî —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏ —ç—Ç–æ–º —Ü–µ–Ω–Ω–æ—Å—Ç—å –∫–æ–º—å—é–Ω–∏—Ç–∏.

–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤ –∫–ª—É–± –¥–µ–≤—É—à–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —É –Ω–∞—Å –µ—Å—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ ‚Äî –≤–µ–¥—å —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ –∑–¥–µ—Å—å —ç—Ç–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ.

–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å –æ—Ç–∫–ª–∏–∫ ‚Äî –∑–∞–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤:
{FORM_URL}""",

        "faq_2": f"""2. –ê –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –Ω–µ –∑–∞–ø–æ–ª–Ω—è—è –∞–Ω–∫–µ—Ç—É?

Entourage Girls ‚Äî —ç—Ç–æ –∑–∞–∫—Ä—ã—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –≤–∞–∂–Ω–∞ –Ω–µ —Ç–æ–ª—å–∫–æ —Ü–µ–Ω–∞, –∞ –æ—â—É—â–µ–Ω–∏–µ ¬´—è —Å—Ä–µ–¥–∏ —Å–≤–æ–∏—Ö¬ª.

–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º—ã —Å–Ω–∞—á–∞–ª–∞ –∑–Ω–∞–∫–æ–º–∏–º—Å—è —á–µ—Ä–µ–∑ –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –ø–æ–¥–æ–π–¥—ë—Ç –ª–∏ —Ç–µ–±–µ –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç.

–ï—Å–ª–∏ –±—É–¥–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ ‚Äî —Ç—ã –ø–æ–ª—É—á–∏—à—å –ª–∏—á–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ê–Ω–∫–µ—Ç–∞ —Ç—É—Ç:
{FORM_URL}""",

        "faq_3": f"""3. –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —á–ª–µ–Ω—Å—Ç–≤–æ?

–ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å:
‚Ä¢ –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É Telegram-—á–∞—Ç—É 24/7
‚Ä¢ —É—á–∞—Å—Ç–∏–µ –≤ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã—Ö –∏–≤–µ–Ω—Ç–∞—Ö
‚Ä¢ 1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏–≤–µ–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞
‚Ä¢ –ø–æ–¥–∞—Ä–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –±—Ä–µ–Ω–¥–æ–≤
‚Ä¢ –∏ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ –∂–µ–Ω—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

–ê–Ω–∫–µ—Ç–∞ –∑–∞–π–º—ë—Ç 3 –º–∏–Ω—É—Ç—ã ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç –ø–µ—Ä–≤—ã–º —à–∞–≥–æ–º –∫ –Ω–∞—à–µ–º—É –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É:
{FORM_URL}""",

        "faq_4": f"""4. –ê —á—Ç–æ –∑–∞ —á–∞—Ç? –ß—Ç–æ —Ç–∞–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?

–≠—Ç–æ –∂–∏–≤–æ–π –∫–ª—É–±–Ω—ã–π Telegram-—á–∞—Ç, –≥–¥–µ –¥–µ–≤—É—à–∫–∏:
‚Ä¢ –æ–±—â–∞—é—Ç—Å—è 24/7 –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã ‚Äî –æ—Ç –ª–∏—á–Ω–æ–≥–æ –¥–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ
‚Ä¢ –∑–Ω–∞–∫–æ–º—è—Ç—Å—è –∏ –Ω–∞—Ö–æ–¥—è—Ç –ø–æ–¥—Ä—É–≥
‚Ä¢ –ø–æ–ª—É—á–∞—é—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–ª—É–±–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è

–í—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∞–Ω–∫–µ—Ç—ã ‚Äî –µ—Å–ª–∏ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è, –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è:
{FORM_URL}""",

        "faq_5": f"""5. –ö–∞–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –∫–ª—É–±–µ?

–£ –Ω–∞—Å –ø—Ä–æ—Ö–æ–¥—è—Ç:
‚Ä¢ –∑–≤–∞–Ω—ã–µ —É–∂–∏–Ω—ã –∏ –¥—É—à–µ–≤–Ω—ã–µ –∑–∞–≤—Ç—Ä–∞–∫–∏
‚Ä¢ –∞—Ä—Ç-–¥–µ–≤–∏—á–Ω–∏–∫–∏, –∫–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏
‚Ä¢ —Ñ–æ—Ç–æ–¥–Ω–∏ –∏ –¥–Ω–∏ –∫—Ä–∞—Å–æ—Ç—ã —Å –±—Ä–µ–Ω–¥–∞–º–∏
‚Ä¢ –±–∞–ª, —Ä–µ—Ç—Ä–∏—Ç—ã –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è

–í—Å—ë —ç—Ç–æ ‚Äî –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —É—é—Ç–∞.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –±—ã—Ç—å —á–∞—Å—Ç—å—é ‚Äî –∑–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –ª–∏—á–Ω–æ:
{FORM_URL}"""
    }

    answer = faq_answers.get(query.data, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    await query.message.reply_text(answer)

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(handle_faq, pattern="^faq$"))
    application.add_handler(CallbackQueryHandler(handle_faq_answer, pattern="^faq_"))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main() 